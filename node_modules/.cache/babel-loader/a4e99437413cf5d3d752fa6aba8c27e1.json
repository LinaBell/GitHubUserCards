{"ast":null,"code":"import _classCallCheck from \"/Users/lina/Documents/GitHub/LinaBell/gitHub_userCards/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lina/Documents/GitHub/LinaBell/gitHub_userCards/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lina/Documents/GitHub/LinaBell/gitHub_userCards/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lina/Documents/GitHub/LinaBell/gitHub_userCards/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lina/Documents/GitHub/LinaBell/gitHub_userCards/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lina/Documents/GitHub/LinaBell/gitHub_userCards/src/components/UserCard.js\";\nimport React from 'react';\nimport UserSearch from './UserSearch';\nimport UserProfile from './UserProfile';\nvar API = 'https://api.github.com/users';\n\nvar UserCard =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(UserCard, _React$PureComponent);\n\n  function UserCard(props) {\n    var _this;\n\n    _classCallCheck(this, UserCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserCard).call(this, props));\n    _this.state = {\n      username: 'linabell',\n      name: '',\n      avatar: '',\n      location: '',\n      repos: '',\n      followers: '',\n      following: '',\n      homeUrl: '',\n      notFound: ''\n    };\n    return _this;\n  }\n\n  _createClass(UserCard, [{\n    key: \"fetchProfile\",\n    value: function fetchProfile(username) {\n      var _this2 = this;\n\n      var url = \"\".concat(API, \"/\").concat(username);\n      fetch(url).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this2.setState({\n          username: data.login,\n          name: data.name,\n          avatar: data.avatar_url,\n          location: data.location,\n          repos: data.public_repos,\n          followers: data.followers,\n          following: data.following,\n          homeUrl: data.html_url,\n          notFound: data.message\n        });\n      }).catch(function (error) {\n        return console.log('Oops! . There Is A Problem');\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchProfile(this.state.username);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          username = _this$state.username,\n          name = _this$state.name,\n          avatar = _this$state.avatar,\n          location = _this$state.location,\n          repos = _this$state.repos,\n          followers = _this$state.followers,\n          following = _this$state.following,\n          homeUrl = _this$state.homeUrl,\n          notFound = _this$state.notFound;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"single-card-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(UserSearch, {\n        fetchProfile: this.fetchProfile.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(UserProfile, {\n        homeUrl: homeUrl,\n        name: name,\n        username: username,\n        avatar: avatar,\n        location: location,\n        repos: repos,\n        followers: followers,\n        following: following,\n        notFound: notFound,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return UserCard;\n}(React.PureComponent);\n\nexport { UserCard as default };","map":{"version":3,"sources":["/Users/lina/Documents/GitHub/LinaBell/gitHub_userCards/src/components/UserCard.js"],"names":["React","UserSearch","UserProfile","API","UserCard","props","state","username","name","avatar","location","repos","followers","following","homeUrl","notFound","url","fetch","then","res","json","data","setState","login","avatar_url","public_repos","html_url","message","catch","error","console","log","fetchProfile","bind","PureComponent"],"mappings":"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","sourcesContent":["import React from 'react'\nimport UserSearch from './UserSearch'\nimport UserProfile from './UserProfile'\n\nconst API = 'https://api.github.com/users'\n\nexport default class UserCard extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: 'linabell',\n      name:'',\n      avatar:'',\n      location:'',\n      repos:'',\n      followers: '',\n      following:'',\n      homeUrl:'',\n      notFound:''\n    }\n  }\n\n  fetchProfile(username) { \n    let url = `${API}/${username}`;\n    fetch(url)\n      .then((res) => res.json() )\n      .then((data) => {\n        this.setState({\n          username: data.login,\n          name: data.name,\n          avatar: data.avatar_url,\n          location: data.location,\n          repos: data.public_repos,\n          followers: data.followers,\n          following: data.following,\n          homeUrl: data.html_url,\n          notFound: data.message\n        })\n      })\n      .catch((error) => console.log('Oops! . There Is A Problem') )\n  }\n\n  componentDidMount() {\n    this.fetchProfile(this.state.username);\n  }\n\n  render() {\n    let {\n      username,\n      name,\n      avatar,\n      location,\n      repos,\n      followers,\n      following,\n      homeUrl,\n      notFound \n    } = this.state\n\n    return (\n      <div>\n         <section className=\"single-card-container\">\n          <UserSearch fetchProfile={this.fetchProfile.bind(this)}/>\n          <UserProfile \n            homeUrl={homeUrl} \n            name={name} \n            username={username} \n            avatar={avatar}\n            location={location}\n            repos={repos}\n            followers={followers}\n            following={following}\n            notFound={notFound}\n          />\n         </section>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}